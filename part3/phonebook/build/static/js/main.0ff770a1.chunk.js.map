{"version":3,"sources":["Components/Notification.js","Components/PersonForm.js","Components/Persons.js","services.js","App.js","index.js"],"names":["Notification","message","className","type","InputForm","text","value","handleOnChange","onChange","PersonForm","handleOnSubmit","handleNameChange","handleNumberChange","newName","newPhoneNumber","onSubmit","Person","person","handleDelete","name","phoneNumber","onClick","Persons","persons","searchInput","filter","toLowerCase","includes","map","id","baseURL","personServices","getAll","axios","get","then","res","data","createPerson","personObject","post","updatePerson","put","deletePerson","delete","Filter","handleFilterChange","App","useState","setPersons","setNewName","setNewPhoneNumber","setSearchInput","notificationMessage","setNotificationMessage","useEffect","e","target","event","preventDefault","some","window","confirm","toUpdatePerson","find","setTimeout","catch","err","response","error","newPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ff770a1.chunk.js","sourcesContent":["const Notification = ({ message }) => {\r\n    if (message === null) {\r\n        return null;\r\n    }\r\n    return <div className={message.type}>{message.message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","const InputForm = ({ text, value, handleOnChange }) => {\r\n    return (\r\n        <div>\r\n            {text}: <input value={value} onChange={handleOnChange} />\r\n        </div>\r\n    );\r\n};\r\nconst PersonForm = ({\r\n    handleOnSubmit,\r\n    handleNameChange,\r\n    handleNumberChange,\r\n    newName,\r\n    newPhoneNumber,\r\n}) => {\r\n    return (\r\n        <form onSubmit={handleOnSubmit}>\r\n            <InputForm\r\n                text=\"name\"\r\n                value={newName}\r\n                handleOnChange={handleNameChange}\r\n            />\r\n            <InputForm\r\n                text=\"number\"\r\n                value={newPhoneNumber}\r\n                handleOnChange={handleNumberChange}\r\n            />\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\nexport default PersonForm;\r\n","const Person = ({ person, handleDelete }) => {\r\n    return (\r\n        <div>\r\n            <p>\r\n                {person.name} {person.phoneNumber}\r\n            </p>\r\n            <button onClick={() => handleDelete(person)}>delete</button>\r\n        </div>\r\n    );\r\n};\r\nconst Persons = ({ persons, searchInput, handleDelete }) => {\r\n    return persons\r\n        .filter(\r\n            (person) =>\r\n                searchInput === \"\" ||\r\n                person.name.toLowerCase().includes(searchInput.toLowerCase())\r\n        )\r\n        .map((person) => (\r\n            <Person\r\n                key={person.id}\r\n                person={person}\r\n                handleDelete={handleDelete}\r\n            />\r\n        ));\r\n};\r\nexport default Persons;\r\n","import axios from \"axios\";\r\nconst baseURL = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseURL).then((res) => res.data);\r\n};\r\nconst createPerson = (personObject) => {\r\n    return axios.post(baseURL, personObject).then((res) => res.data);\r\n};\r\n\r\nconst updatePerson = (personObject, newPhoneNumber) => {\r\n    return axios\r\n        .put(`${baseURL}/${personObject.id}`, {\r\n            ...personObject,\r\n            phoneNumber: newPhoneNumber,\r\n        })\r\n        .then((res) => res.data);\r\n};\r\n\r\nconst deletePerson = (id) => {\r\n    return axios.delete(`${baseURL}/${id}`);\r\n};\r\n\r\nconst personServices = { getAll, createPerson, updatePerson, deletePerson };\r\nexport default personServices;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Notification from \"./Components/Notification\";\r\nimport PersonForm from \"./Components/PersonForm\";\r\nimport Persons from \"./Components/Persons\";\r\nimport personServices from \"./services\";\r\nconst Filter = ({ handleFilterChange }) => {\r\n    return (\r\n        <div>\r\n            filter shown with\r\n            <input onChange={handleFilterChange} />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([]);\r\n    const [newName, setNewName] = useState(\"\");\r\n    const [newPhoneNumber, setNewPhoneNumber] = useState(\"\");\r\n    const [searchInput, setSearchInput] = useState(\"\");\r\n    const [notificationMessage, setNotificationMessage] = useState(null);\r\n    const handleOnSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (persons.some((person) => person.name === newName)) {\r\n            if (\r\n                window.confirm(\r\n                    `${newName} is already added to phonebook,replace old number with new?`\r\n                )\r\n            ) {\r\n                const toUpdatePerson = persons.find(\r\n                    (person) => person.name === newName\r\n                );\r\n                personServices\r\n                    .updatePerson(toUpdatePerson, newPhoneNumber)\r\n                    .then((res) => {\r\n                        setPersons(\r\n                            persons.map((person) => {\r\n                                return person !== toUpdatePerson ? person : res;\r\n                            })\r\n                        );\r\n                        setNotificationMessage({\r\n                            message: `Updated ${res.name}'s number to ${res.phoneNumber}`,\r\n                            type: \"notification\",\r\n                        });\r\n                        setTimeout(() => setNotificationMessage(null), 5000);\r\n                    })\r\n                    .catch((err) => {\r\n                        setNotificationMessage({\r\n                            message: err.response.data.error,\r\n                            type: \"error\",\r\n                        });\r\n                        setTimeout(() => setNotificationMessage(null), 5000);\r\n                    });\r\n            }\r\n        } else {\r\n            const newPerson = { name: newName, phoneNumber: newPhoneNumber };\r\n            personServices\r\n                .createPerson(newPerson)\r\n                .then((res) => {\r\n                    setPersons(persons.concat(res));\r\n                    setNotificationMessage({\r\n                        message: `Added ${res.name} with number ${res.phoneNumber}`,\r\n                        type: \"notification\",\r\n                    });\r\n                    setTimeout(() => setNotificationMessage(null), 5000);\r\n                })\r\n                .catch((err) => {\r\n                    setNotificationMessage({\r\n                        message: err.response.data.error,\r\n                        type: \"error\",\r\n                    });\r\n                    setTimeout(() => setNotificationMessage(null), 5000);\r\n                });\r\n            setNewName(\"\");\r\n            setNewPhoneNumber(\"\");\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        personServices.getAll().then((res) => {\r\n            setPersons(res);\r\n        });\r\n    }, []);\r\n    const handleFilterChange = (e) => setSearchInput(e.target.value);\r\n    const handleNameChange = (e) => setNewName(e.target.value);\r\n    const handleNumberChange = (e) => setNewPhoneNumber(e.target.value);\r\n    const handleNumberDelete = (deletePerson) => {\r\n        if (window.confirm(\"Delete user?\")) {\r\n            personServices\r\n                .deletePerson(deletePerson.id)\r\n                .then(() => {\r\n                    setPersons(\r\n                        persons.filter(\r\n                            (person) => person.id !== deletePerson.id\r\n                        )\r\n                    );\r\n                })\r\n                .catch((err) => {\r\n                    setNotificationMessage({\r\n                        message: `Information of ${deletePerson.name} has already been removed from the server.`,\r\n                        type: \"error\",\r\n                    });\r\n                    setTimeout(() => setNotificationMessage(null), 5000);\r\n                });\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Filter handleFilterChange={handleFilterChange} />\r\n            <Notification message={notificationMessage} />\r\n            <h2>Add a new</h2>\r\n            <PersonForm\r\n                handleOnSubmit={handleOnSubmit}\r\n                handleNameChange={handleNameChange}\r\n                handleNumberChange={handleNumberChange}\r\n                newName={newName}\r\n                newPhoneNumber={newPhoneNumber}\r\n            />\r\n            <h2>Numbers</h2>\r\n            <Persons\r\n                persons={persons}\r\n                searchInput={searchInput}\r\n                handleDelete={handleNumberDelete}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import App from \"./App\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}